@page
@model FitTrackPro.Pages.ProgressTracking.IndexModel
@{
    ViewData["Title"] = "Progress Dashboard";
    var displayData = Model.AverageMeasurement;
    var selectedRange = string.IsNullOrEmpty(Model.TimeRange) ? "All Time" : Model.TimeRange switch
    {
        "recent" => "Most Recent",
        "weekly" => "Weekly",
        "monthly" => "Monthly",
        _ => "All Time"
    };
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Health Progress Dashboard</h2>
        <a href="/ProgressTracking/Create" class="btn btn-primary">Add Measurement</a>
    </div>

    <div class="mb-3">
        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                @selectedRange
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="?timeRange=recent">Most Recent</a></li>
                <li><a class="dropdown-item" href="?timeRange=weekly">Weekly</a></li>
                <li><a class="dropdown-item" href="?timeRange=monthly">Monthly</a></li>
                <li><a class="dropdown-item" href="?">All Time</a></li>
            </ul>
        </div>
    </div>

    @if (displayData == null)
    {
        <div class="alert alert-info">
            <h5>No measurements yet</h5>
            <p>Start tracking your progress by adding your first body measurement.</p>
        </div>
    }
    else
    {
        <div class="mb-4">
            <small class="text-muted">Latest measurement: @displayData.Date.ToString("MMM dd, yyyy")</small>
            @if (Model.MeasurementCount > 1)
            {
                <small class="text-muted ms-2">(Average from @Model.MeasurementCount measurements)</small>
            }
        </div>
        <div class="row g-3">
            <!-- Weight Card -->
            <div class="col-md-6 col-lg-4">
                <div class="card h-100">
                    <div class="card-body">
                        <h5 class="card-title text-muted">Weight</h5>
                        <h2 class="mb-0">@displayData.Weight <small class="text-muted">kg</small></h2>
                        <div class="mt-3 p-3 bg-light rounded">
                            <small class="text-muted">Chart placeholder</small>
                        </div>
                    </div>
                </div>
            </div>
            @if (displayData.BodyFat.HasValue)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title text-muted">Body Fat</h5>
                            <h2 class="mb-0">@displayData.BodyFat.Value.ToString("F1") <small class="text-muted">%</small></h2>
                            <div class="mt-3 p-3 bg-light rounded">
                                <small class="text-muted">Chart placeholder</small>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @if (displayData.MuscleMass.HasValue)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title text-muted">Muscle Mass</h5>
                            <h2 class="mb-0">@displayData.MuscleMass.Value.ToString("F1") <small class="text-muted">%</small></h2>
                            <div class="mt-3 p-3 bg-light rounded">
                                <small class="text-muted">Chart placeholder</small>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @if (displayData.Chest.HasValue)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title text-muted">Chest</h5>
                            <h2 class="mb-0">@displayData.Chest.Value.ToString("F1") <small class="text-muted">cm</small></h2>
                            <div class="mt-3 p-3 bg-light rounded">
                                <small class="text-muted">Chart placeholder</small>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @if (displayData.Arms.HasValue)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title text-muted">Arms</h5>
                            <h2 class="mb-0">@displayData.Arms.Value.ToString("F1") <small class="text-muted">cm</small></h2>
                            <div class="mt-3 p-3 bg-light rounded">
                                <small class="text-muted">Chart placeholder</small>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Waist Card -->
            @if (displayData.Waist.HasValue)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title text-muted">Waist</h5>
                            <h2 class="mb-0">@displayData.Waist.Value.ToString("F1") <small class="text-muted">cm</small></h2>
                            <div class="mt-3 p-3 bg-light rounded">
                                <small class="text-muted">Chart placeholder</small>
                            </div>
                        </div>
                    </div>
                </div>
            }

            <!-- Legs Card -->
            @if (displayData.Legs.HasValue)
            {
                <div class="col-md-6 col-lg-4">
                    <div class="card h-100">
                        <div class="card-body">
                            <h5 class="card-title text-muted">Legs</h5>
                            <h2 class="mb-0">@displayData.Legs.Value.ToString("F1") <small class="text-muted">cm</small></h2>
                            <div class="mt-3 p-3 bg-light rounded">
                                <small class="text-muted">Chart placeholder</small>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>